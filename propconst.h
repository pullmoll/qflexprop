/***************************************************************************************
 *
 * Qt5 Propeller 2 string constants (tokens)
 *
 * Copyright ðŸ„¯ 2021 JÃ¼rgen BuchmÃ¼ller <pullmoll@t-online.de>
 *
 * See the file LICENSE for the details of the BSD-3-Clause terms.
 *
 ***************************************************************************************/
#pragma once

#include <QString>
#include <QMap>
#include <QList>

typedef enum {
    TOK_0,

    TOK_CPP_IF,
    TOK_CPP_ELSE,
    TOK_CPP_ENDIF,
    TOK_CPP_IFDEF,
    TOK_CPP_IFNDEF,
    TOK_CPP_ELIF,
    TOK_CPP_ELIFDEF,
    TOK_CPP_ELIFNDEF,
    TOK_CPP_DEFINE,
    TOK_CPP_UNDEF,

    TOK_CON,
    TOK_VAR,
    TOK_DAT,
    TOK_PUB,
    TOK_PRI,
    TOK_OBJ,
    TOK_ASM,
    TOK_ENDASM,
    TOK_END,
    TOK_INLINECCODE,
    TOK_BYTE,
    TOK_WORD,
    TOK_LONG,
    TOK_FVAR,
    TOK_FVARS,
    TOK_ASMCLK,

    TOK_INSTR,
    TOK_INSTRMODIFIER,
    TOK_HWREG,
    TOK_ORG,
    TOK_ORGH,
    TOK_ORGF,
    TOK_RES,
    TOK_FIT,
    TOK_ALIGNL,
    TOK_ALIGNW,

    TOK_REPEAT,
    TOK_FROM,
    TOK_TO,
    TOK_STEP,
    TOK_WHILE,
    TOK_UNTIL,
    TOK_IF,
    TOK_IFNOT,
    TOK_ELSE,
    TOK_ELSEIF,
    TOK_ELSEIFNOT,
    TOK_THEN,
    TOK_ENDIF,

    TOK_LOOKDOWN,
    TOK_LOOKDOWNZ,
    TOK_LOOKUP,
    TOK_LOOKUPZ,
    TOK_COGINIT2,
    TOK_COGNEW,

    TOK_CASE,
    TOK_CASE_FAST,
    TOK_OTHER,

    TOK_QUIT,
    TOK_NEXT,

    TOK_ALLOCA,

    // other stuff
    TOK_ABORT,
    TOK_RESULT,
    TOK_RETURN,
    TOK_INDENT,
    TOK_OUTDENT,
    TOK_EOLN,
    TOK_EOF,
    TOK_DOTS,
    TOK_HERE,
    TOK_STRINGPTR,
    TOK_FILE,

    // p2asm
    TOK_NOP,
    TOK_ROR,
    TOK_ROL,
    TOK_SHR,
    TOK_SHL,
    TOK_RCR,
    TOK_RCL,
    TOK_SAR,
    TOK_SAL,
    TOK_ADD,
    TOK_ADDX,
    TOK_ADDS,
    TOK_ADDSX,
    TOK_SUB,
    TOK_SUBX,
    TOK_SUBS,
    TOK_SUBSX,
    TOK_CMP,
    TOK_CMPX,
    TOK_CMPS,
    TOK_CMPSX,
    TOK_CMPR,
    TOK_CMPM,
    TOK_SUBR,
    TOK_CMPSUB,
    TOK_FGE,
    TOK_FLE,
    TOK_FGES,
    TOK_FLES,
    TOK_SUMC,
    TOK_SUMNC,
    TOK_SUMZ,
    TOK_SUMNZ,
    TOK_TESTB,
    TOK_TESTBN,
    TOK_BITL,
    TOK_BITH,
    TOK_BITC,
    TOK_BITNC,
    TOK_BITZ,
    TOK_BITNZ,
    TOK_BITRND,
    TOK_BITNOT,
    TOK_AND,
    TOK_ANDN,
    TOK_OR,
    TOK_XOR,
    TOK_MUXC,
    TOK_MUXNC,
    TOK_MUXZ,
    TOK_MUXNZ,
    TOK_MOV,
    TOK_NOT,
    TOK_ABS,
    TOK_NEG,
    TOK_NEGC,
    TOK_NEGNC,
    TOK_NEGZ,
    TOK_NEGNZ,
    TOK_INCMOD,
    TOK_DECMOD,
    TOK_ZEROX,
    TOK_SIGNX,
    TOK_ENCOD,
    TOK_ONES,
    TOK_TEST,
    TOK_TESTN,
    TOK_SETNIB,
    TOK_GETNIB,
    TOK_ROLNIB,
    TOK_SETBYTE,
    TOK_GETBYTE,
    TOK_ROLBYTE,
    TOK_SETWORD,
    TOK_GETWORD,
    TOK_ROLWORD,
    TOK_ALTSN,
    TOK_ALTGN,
    TOK_ALTSB,
    TOK_ALTGB,
    TOK_ALTSW,
    TOK_ALTGW,
    TOK_ALTR,
    TOK_ALTD,
    TOK_ALTS,
    TOK_ALTB,
    TOK_ALTI,
    TOK_SETR,
    TOK_SETD,
    TOK_SETS,
    TOK_DECOD,
    TOK_BMASK,
    TOK_CRCBIT,
    TOK_CRCNIB,
    TOK_MUXNITS,
    TOK_MUXNIBS,
    TOK_MUXQ,
    TOK_MOVBYTS,
    TOK_MUL,
    TOK_MULS,
    TOK_SCA,
    TOK_SCAS,
    TOK_ADDPIX,
    TOK_MULPIX,
    TOK_BLNPIX,
    TOK_MIXPIX,
    TOK_ADDCT1,
    TOK_ADDCT2,
    TOK_ADDCT3,
    TOK_WMLONG,
    TOK_RQPIN,
    TOK_RDPIN,
    TOK_RDLUT,
    TOK_RDBYTE,
    TOK_RDWORD,
    TOK_RDLONG,
    TOK_POPA,
    TOK_POPB,
    TOK_CALLD,
    TOK_RESI3,
    TOK_RESI2,
    TOK_RESI1,
    TOK_RESI0,
    TOK_RETI3,
    TOK_RETI2,
    TOK_RETI1,
    TOK_RETI0,
    TOK_CALLPA,
    TOK_CALLPB,
    TOK_DJZ,
    TOK_DJNZ,
    TOK_DJF,
    TOK_DJNF,
    TOK_IJZ,
    TOK_IJNZ,
    TOK_TJZ,
    TOK_TJNZ,
    TOK_TJF,
    TOK_TJNF,
    TOK_TJS,
    TOK_TJNS,
    TOK_TJV,
    TOK_JINT,
    TOK_JCT1,
    TOK_JCT2,
    TOK_JCT3,
    TOK_JSE1,
    TOK_JSE2,
    TOK_JSE3,
    TOK_JSE4,
    TOK_JPAT,
    TOK_JFBW,
    TOK_JXMT,
    TOK_JXFI,
    TOK_JXRO,
    TOK_JXRL,
    TOK_JATN,
    TOK_JQMT,
    TOK_JNINT,
    TOK_JNCT1,
    TOK_JNCT2,
    TOK_JNCT3,
    TOK_JNSE1,
    TOK_JNSE2,
    TOK_JNSE3,
    TOK_JNSE4,
    TOK_JNPAT,
    TOK_JNFBW,
    TOK_JNXMT,
    TOK_JNXFI,
    TOK_JNXRO,
    TOK_JNXRL,
    TOK_JNATN,
    TOK_JNQMT,
    TOK_SETPAT,
    TOK_AKPIN,
    TOK_WRPIN,
    TOK_WXPIN,
    TOK_WYPIN,
    TOK_WRLUT,
    TOK_WRBYTE,
    TOK_WRWORD,
    TOK_WRLONG,
    TOK_PUSHA,
    TOK_PUSHB,
    TOK_RDFAST,
    TOK_WRFAST,
    TOK_FBLOCK,
    TOK_XINIT,
    TOK_XSTOP,
    TOK_XZERO,
    TOK_XCONT,
    TOK_REP,
    TOK_COGINIT,
    TOK_QMUL,
    TOK_QDIV,
    TOK_QFRAC,
    TOK_QSQRT,
    TOK_QROTATE,
    TOK_QVECTOR,
    TOK_HUBSET,
    TOK_COGID,
    TOK_COGSTOP,
    TOK_LOCKNEW,
    TOK_LOCKRET,
    TOK_LOCKTRY,
    TOK_LOCKREL,
    TOK_QLOG,
    TOK_QEXP,
    TOK_RFBYTE,
    TOK_RFWORD,
    TOK_RFLONG,
    TOK_RFVAR,
    TOK_RFVARS,
    TOK_WFBYTE,
    TOK_WFWORD,
    TOK_WFLONG,
    TOK_GETQX,
    TOK_GETQY,
    TOK_GETCT,
    TOK_GETRND,
    TOK_SETDACS,
    TOK_SETXFRQ,
    TOK_FETXACC,
    TOK_WAITX,
    TOK_SETSE1,
    TOK_SETSE2,
    TOK_SETSE3,
    TOK_SETSE4,
    TOK_POLLINT,
    TOK_POLLCT1,
    TOK_POLLCT2,
    TOK_POLLCT3,
    TOK_POLLSE1,
    TOK_POLLSE2,
    TOK_POLLSE3,
    TOK_POLLSE4,
    TOK_POLLPAT,
    TOK_POLLFBW,
    TOK_POLLXMT,
    TOK_POLLXFI,
    TOK_POLLXRO,
    TOK_POLLXRL,
    TOK_POLLATN,
    TOK_POLLQMT,
    TOK_WAITINT,
    TOK_WAITCT1,
    TOK_WAITCT2,
    TOK_WAITCT3,
    TOK_WAITSE1,
    TOK_WAITSE2,
    TOK_WAITSE3,
    TOK_WAITSE4,
    TOK_WAITPAT,
    TOK_WAITFBW,
    TOK_WAITXMT,
    TOK_WAITXFI,
    TOK_WAITXRO,
    TOK_WAITXRL,
    TOK_WAITATN,
    TOK_ALLOWI,
    TOK_STALLI,
    TOK_TRGINT1,
    TOK_TRGINT2,
    TOK_TRGINT3,
    TOK_NIXINT1,
    TOK_NIXINT2,
    TOK_NIXINT3,
    TOK_SETINT1,
    TOK_SETINT2,
    TOK_SETINT3,
    TOK_SETQ,
    TOK_SETQ2,
    TOK_PUSH,
    TOK_POP,
    TOK_JMP,
    TOK_CALL,
    TOK_RET,
    TOK_CALLA,
    TOK_RETA,
    TOK_CALLB,
    TOK_RETB,
    TOK_JMPREL,
    TOK_SKIP,
    TOK_SKIPF,
    TOK_EXECF,
    TOK_GETPTR,
    TOK_GETBRK,
    TOK_COGBRK,
    TOK_BRK,
    TOK_SETLUTS,
    TOK_SETCY,
    TOK_SETCI,
    TOK_SETCQ,
    TOK_SETCFRQ,
    TOK_SETCMOD,
    TOK_SETPIV,
    TOK_SETPIX,
    TOK_COGATN,
    TOK_TESTP,
    TOK_TESTPN,
    TOK_DIRL,
    TOK_DIRH,
    TOK_DIRC,
    TOK_DIRNC,
    TOK_DIRZ,
    TOK_DIRNZ,
    TOK_DIRRND,
    TOK_DIRNOT,
    TOK_OUTL,
    TOK_OUTH,
    TOK_OUTC,
    TOK_OUTNC,
    TOK_OUTZ,
    TOK_OUTNZ,
    TOK_OUTRND,
    TOK_OUTNOT,
    TOK_FLTL,
    TOK_FLTH,
    TOK_FLTC,
    TOK_FLTNC,
    TOK_FLTZ,
    TOK_FLTNZ,
    TOK_FLTRND,
    TOK_FLTNOT,
    TOK_DRVL,
    TOK_DRVH,
    TOK_DRVC,
    TOK_DRVNC,
    TOK_DRVZ,
    TOK_DRVNZ,
    TOK_DRVRND,
    TOK_DRVNOT,
    TOK_SPLITB,
    TOK_MERGEB,
    TOK_SPLITW,
    TOK_MERGEW,
    TOK_SEUSSR,
    TOK_RGBSQZ,
    TOK_RGBEXP,
    TOK_XORO32,
    TOK_REV,
    TOK_RCZR,
    TOK_RCZL,
    TOK_WRC,
    TOK_RCNC,
    TOK_WRZ,
    TOK_RCNZ,
    TOK_MODCZ,
    TOK_MODC,
    TOK_MODZ,
    TOK_SETSCP,
    TOK_GETSCP,
    TOK_LOC,
    TOK_AUGS,
    TOK_AUGD,
    TOK__RET_,

    // conditionals
    TOK_IF_NZ_AND_NC,
    TOK_IF_NC_AND_NZ,
    TOK_IF_A,
    TOK_IF_GT,
    TOK_IF_00,
    TOK_IF_Z_AND_NC,
    TOK_IF_NC_AND_Z,
    TOK_IF_01,
    TOK_IF_NC,
    TOK_IF_AE,
    TOK_IF_GE,
    TOK_IF_0X,
    TOK_IF_NZ_AND_C,
    TOK_IF_C_AND_NZ,
    TOK_IF_10,
    TOK_IF_NZ,
    TOK_IF_NE,
    TOK_IF_X0,
    TOK_IF_Z_NE_C,
    TOK_IF_C_NE_Z,
    TOK_IF_DIFF,
    TOK_IF_NZ_OR_NC,
    TOK_IF_NC_OR_NZ,
    TOK_IF_NOT_11,
    TOK_IF_Z_AND_C,
    TOK_IF_C_AND_Z,
    TOK_IF_11,
    TOK_IF_Z_EQ_C,
    TOK_IF_C_EQ_Z,
    TOK_IF_SAME,
    TOK_IF_Z,
    TOK_IF_E,
    TOK_IF_X1,
    TOK_IF_Z_OR_NC,
    TOK_IF_NC_OR_Z,
    TOK_IF_NOT_10,
    TOK_IF_C,
    TOK_IF_B,
    TOK_IF_LT,
    TOK_IF_1X,
    TOK_IF_NZ_OR_C,
    TOK_IF_C_OR_NZ,
    TOK_IF_NOT_01,
    TOK_IF_Z_OR_C,
    TOK_IF_C_OR_Z,
    TOK_IF_BE,
    TOK_IF_LE,
    TOK_IF_NOT_00,
    TOK_IF_ALWAYS,

    // operators
    TOK_ASSIGN,
    TOK_OP_XOR,
    TOK_OP_OR,
    TOK_OP_AND,
    TOK_OP_ORELSE,
    TOK_OP_ANDTHEN,
    TOK_OP_GE,
    TOK_OP_LE,
    TOK_OP_GEU,
    TOK_OP_LEU,
    TOK_OP_GTU,
    TOK_OP_LTU,
    TOK_OP_NE,
    TOK_OP_EQ,
    TOK_OP_SGNCOMP,
    TOK_OP_LIMITMIN,
    TOK_OP_LIMITMAX,
    TOK_OP_REMAINDER,
    TOK_OP_UNSDIV,
    TOK_OP_UNSMOD,
    TOK_OP_FRAC,
    TOK_OP_HIGHMULT,
    TOK_OP_SCAS,
    TOK_OP_UNSHIGHMULT,
    TOK_OP_ROTR,
    TOK_OP_ROTL,
    TOK_OP_SHL,
    TOK_OP_SHR,
    TOK_OP_SAR,
    TOK_OP_REV,
    TOK_OP_REV2,
    TOK_OP_ADDBITS,
    TOK_OP_ADDPINS,
    TOK_OP_NEGATE,
    TOK_OP_BIT_NOT,
    TOK_OP_SQRT,
    TOK_OP_ABS,
    TOK_OP_DECODE,
    TOK_OP_ENCODE,
    TOK_OP_ENCODE2,
    TOK_OP_NOT,
    TOK_OP_DOUBLETILDE,
    TOK_OP_INCREMENT,
    TOK_OP_DECREMENT,
    TOK_OP_DOUBLEAT,
    TOK_OP_TRIPLEAT,
    TOK_OP_FLOAT,
    TOK_OP_TRUNC,
    TOK_OP_ROUND,
    TOK_CONSTANT,
    TOK_RANDOM,
    TOK_EMPTY,
    TOK_OP_SIGNX,
    TOK_OP_ZEROX,
    TOK_OP_ONES,
    TOK_OP_BMASK,
    TOK_OP_QLOG,
    TOK_OP_QEXP,
    TOK_OP_DEBUG,
    TOK_LOOK_SEP,

    TOK_
}   PropToken;

class CPropToken
{
public:
    CPropToken(const PropToken t = TOK_0, const QString& name = QString(), const QString& desc = QString());

    PropToken tok() const;
    const QString& name() const;
    const QString& desc() const;

private:
    PropToken m_token;
    QString m_name;
    QString m_desc;
};

class CPropTokens
{
public:
    CPropTokens();

    void add(const PropToken t, const QString& name = QString(), const QString& desc = QString());
    QStringList list(const QList<PropToken>& filter = QList<PropToken>()) const;
    QStringList list_esc(const QList<PropToken>& filter = QList<PropToken>()) const;

private:
    QMap<PropToken,CPropToken> m_tokens;
};

extern const CPropTokens g_tokens;
extern const QList<PropToken> g_preproc;
extern const QList<PropToken> g_keywords;
extern const QList<PropToken> g_conditionals;
extern const QList<PropToken> g_sections;
extern const QList<PropToken> g_operator;
